
name: (on push) zip release readme
on:
  push:
    paths:
      - 'myplugins/**'
jobs:
  zip-files:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Analyse changed plugins
        id: files
        uses: tj-actions/changed-files@v28.0.0
        with:
          separator: '%%%'
      - name: Zip changed plugins
        run: |
          import os
          import subprocess
          changed = "${{ steps.files.outputs.all_changed_and_modified_files }}"
          plugins = set()
          for f in changed.split("%%%"):
            if not "myplugins" in f:
              continue
            path = f.split(os.sep)
            index = path.index("myplugins") + 1
            if index >= len(path):
              continue
            plugins.add(path[index])
          if plugins:
            print("The following plugins have changed:")
            for p in plugins:
              print(p)
              os.chdir('myplugins/')
              corrected = p.replace(" ", ".")
              corrected = corrected.replace("'", ".") 
              corrected = corrected.replace(",", ".") 
              corrected = corrected.replace("(", ".") 
              corrected = corrected.replace(")", ".") 
              corrected = corrected.replace("&", ".") 
              corrected = corrected.replace(",", ".") 
              corrected = corrected.replace("...", ".")
              corrected = corrected.replace("..", ".") 
              if corrected[len(corrected)-1] == ".":
                corrected = corrected[:len(corrected)-1]
              subprocess.run(["zip", "-r", "../" + corrected + ".zip", p],
                stdout=subprocess.DEVNULL)
              os.chdir('../')
          else:
            print("No plugin changes have been detected.")
        shell: python
      - name: Upload plugins to release
        uses: ncipollo/release-action@v1.11.1
        with:
          name: Downloads
          tag: Latest
          allowUpdates: true
          replacesArtifacts: true
          updateOnlyUnreleased: false
          artifacts: "*.zip"
      - name: Make README.md
        run: python res/src/makemd.py
      - name: Commit file
        run: |
          git config user.name "zuckung" 
          git config user.email "zuckung@gmx.de"
          git add .
          git diff-index --quiet HEAD || git commit -m "README.md updated"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
